<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="561px" preserveAspectRatio="none" style="width:862px;height:561px;background:#FFFFFF;" version="1.1" viewBox="0 0 862 561" width="862px" zoomAndPan="magnify"><defs/><g><!--class Processor--><g id="elem_Processor"><rect codeLine="1" fill="#F1F1F1" height="96.8906" id="Processor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="420.3789" x="221.03" y="7"/><ellipse cx="392.9778" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M395.9465,28.6406 Q395.3684,28.9375 394.7278,29.0781 Q394.0871,29.2344 393.384,29.2344 Q390.884,29.2344 389.5559,27.5938 Q388.2434,25.9375 388.2434,22.8125 Q388.2434,19.6875 389.5559,18.0313 Q390.884,16.375 393.384,16.375 Q394.0871,16.375 394.7278,16.5313 Q395.384,16.6875 395.9465,16.9844 L395.9465,19.7031 Q395.3215,19.125 394.7278,18.8594 Q394.134,18.5781 393.509,18.5781 Q392.1653,18.5781 391.4778,19.6563 Q390.7903,20.7188 390.7903,22.8125 Q390.7903,24.9063 391.4778,25.9844 Q392.1653,27.0469 393.509,27.0469 Q394.134,27.0469 394.7278,26.7813 Q395.3215,26.5 395.9465,25.9219 L395.9465,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67.9834" x="413.4778" y="27.8467">Processor</text><line style="stroke:#181818;stroke-width:0.5;" x1="222.03" x2="640.4089" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="222.03" x2="640.4089" y1="47" y2="47"/><ellipse cx="232.03" cy="60.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90.6377" x="241.03" y="63.9951">~Processor()</text><ellipse cx="232.03" cy="76.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195.3232" x="241.03" y="80.292">void read(std::string &amp;path)</text><ellipse cx="232.03" cy="93.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394.3789" x="241.03" y="96.5889">void write(std::string &amp;output_path, std::string &amp;format)</text></g><!--class ImageProcessor--><g id="elem_ImageProcessor"><rect codeLine="7" fill="#F1F1F1" height="390.2344" id="ImageProcessor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="848.4316" x="7" y="163.89"/><ellipse cx="371.0513" cy="179.89" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M374.02,185.5306 Q373.4419,185.8275 372.8013,185.9681 Q372.1606,186.1244 371.4575,186.1244 Q368.9575,186.1244 367.6294,184.4838 Q366.3169,182.8275 366.3169,179.7025 Q366.3169,176.5775 367.6294,174.9213 Q368.9575,173.265 371.4575,173.265 Q372.1606,173.265 372.8013,173.4213 Q373.4575,173.5775 374.02,173.8744 L374.02,176.5931 Q373.395,176.015 372.8013,175.7494 Q372.2075,175.4681 371.5825,175.4681 Q370.2388,175.4681 369.5513,176.5463 Q368.8638,177.6088 368.8638,179.7025 Q368.8638,181.7963 369.5513,182.8744 Q370.2388,183.9369 371.5825,183.9369 Q372.2075,183.9369 372.8013,183.6713 Q373.395,183.39 374.02,182.8119 L374.02,185.5306 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111.8291" x="391.5513" y="184.7367">ImageProcessor</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="854.4316" y1="195.89" y2="195.89"/><ellipse cx="18" cy="209.5384" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211.5996" x="27" y="212.8851">std::string m_raw_image_path</text><ellipse cx="18" cy="225.8353" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153.043" x="27" y="229.182">cv::Mat m_raw_image</text><ellipse cx="18" cy="242.1322" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="694.6201" x="27" y="245.4789">Eigen::Matrix&lt;unsigned char, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor&gt; m_eigen_image</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="854.4316" y1="252.7806" y2="252.7806"/><ellipse cx="18" cy="266.4291" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="822.4316" x="27" y="269.7757">void cv2eigen(cv::Mat&amp; src, Eigen::Matrix&lt;unsigned char, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor&gt;&amp; dst)</text><ellipse cx="18" cy="282.7259" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="822.4316" x="27" y="286.0726">void eigen2cv(Eigen::Matrix&lt;unsigned char, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor&gt;&amp; src, cv::Mat&amp; dst)</text><ellipse cx="18" cy="299.0228" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="291.8467" x="27" y="302.3695">ImageProcessor(std::string &amp;image_path)</text><ellipse cx="18" cy="315.3197" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122.7529" x="27" y="318.6664">ImageProcessor()</text><ellipse cx="18" cy="331.6166" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249.2861" x="27" y="334.9632">double get_average_pixel_density()</text><ellipse cx="18" cy="347.9134" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131.373" x="27" y="351.2601">void reset_image()</text><ellipse cx="18" cy="364.2103" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81.8809" x="27" y="367.557">void flip_x()</text><ellipse cx="18" cy="380.5072" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81.8809" x="27" y="383.8539">void flip_y()</text><ellipse cx="18" cy="396.8041" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117.4141" x="27" y="400.1507">void rotate_left()</text><ellipse cx="18" cy="413.1009" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127.3877" x="27" y="416.4476">void rotate_right()</text><ellipse cx="18" cy="429.3978" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112.5811" x="27" y="432.7445">void grayscale()</text><ellipse cx="18" cy="445.6947" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336.376" x="27" y="449.0414">pybind11::array_t&lt;unsigned char&gt; get_image()</text><ellipse cx="18" cy="461.9916" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="492.9258" x="27" y="465.3382">std::map&lt;std::string, std::function&lt;void()&gt;&gt; m_transformations_map</text><ellipse cx="18" cy="478.2884" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252.4512" x="27" y="481.6351">pybind11::list get_transformations()</text><ellipse cx="18" cy="494.5853" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="432.4414" x="27" y="497.932">void apply_transformation(std::string &amp;transformation_name)</text><ellipse cx="18" cy="510.8822" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="327.8516" x="27" y="514.2289">int flipped_grayscale(std::string &amp;output_path)</text><ellipse cx="18" cy="527.1791" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245.9297" x="27" y="530.5257">void read(std::string &amp;image_path)</text><ellipse cx="18" cy="543.4759" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394.3789" x="27" y="546.8226">void write(std::string &amp;output_path, std::string &amp;format)</text></g><!--reverse link Processor to ImageProcessor--><g id="link_Processor_ImageProcessor"><path codeLine="31" d="M431.22,122.22 C431.22,139.33 431.22,141.82 431.22,163.65 " fill="none" id="Processor-backto-ImageProcessor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="431.22,104.22,425.22,122.22,437.22,122.22,431.22,104.22" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[hLGzRuCm4Dtv5PuYeYP3CYAKgHqwHAhw1woBROWhi2tx847z-Eq5Wm8cIPU6ZNllxjsNZnNW77cpcWddj2MV4Mc_fv-B9LxsbbfBJgm07ZlaIUBGIfMJXG4yJXadAr6455sXgP1sp1K9a4pR4d0PVKSHytcybf2BgsIcFYMrSAAou_c8FOFLIR87dA8zy29peJncvJcjb9Ev4fom8zWL6S3dHa4fsTt_TttQmuUskpQyw4nJ0LyqgxSUY8Sy5iJPqVynuWl27KuxxHMth8uVBEDJlnGoYeQp2KSypkCsUR1oNHqAGNA156fXlOyyYu9oqMQDpMpNNClpaGDxLaX3pzUccRT6G44BaU4jkvNvCGHo2urZK5p4J7EGYcysIGAsnIY6hTtvCeBqV4jACEcaDyF6PvLYABLAEwrukUjs2Iqerp-15d6qzPmh5zAXrvbnWyp1cAAPCSBnX1XjHo-605AXxvuHd8uTkFTy_pu5LqlmhuCmNe7qQxsUNOPV]--></g></svg>